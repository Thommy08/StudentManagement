<Application x:Class="trabalhoLAB.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:trabalhoLAB"
             StartupUri="MainWindow.xaml">
    <Application.Resources> 
        <ResourceDictionary>
            <!-- ============== COLOR SYSTEM ============== -->
            
            <!-- Light Theme Colors -->
            <SolidColorBrush x:Key="LightThemeBackground" Color="#F5F5F5"/>
            <SolidColorBrush x:Key="LightThemeText" Color="#333333"/>
            <SolidColorBrush x:Key="LightThemeTextSecondary" Color="#777777"/>
            <SolidColorBrush x:Key="LightThemeSidebar" Color="#343452"/>
            <SolidColorBrush x:Key="LightThemeAccent" Color="#5B5BD6"/>
            <SolidColorBrush x:Key="LightThemeCard" Color="White"/>
            <SolidColorBrush x:Key="LightThemeBorder" Color="#DDDDDD"/>
            <SolidColorBrush x:Key="LightThemeInput" Color="#F8F8F8"/>
            <SolidColorBrush x:Key="LightThemeInputBorder" Color="#E0E0E0"/>
            <SolidColorBrush x:Key="LightThemeAltRow" Color="#F8F8F8"/>
            <SolidColorBrush x:Key="LightThemeSuccess" Color="#4CAF50"/>
            <SolidColorBrush x:Key="LightThemeWarning" Color="#FF9800"/>
            <SolidColorBrush x:Key="LightThemeError" Color="#F44336"/>
            <SolidColorBrush x:Key="LightThemeHover" Color="#EFEFEF"/>
            
            <!-- Dark Theme Colors -->
            <SolidColorBrush x:Key="DarkThemeBackground" Color="#1E1E2E"/>
            <SolidColorBrush x:Key="DarkThemeText" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="DarkThemeTextSecondary" Color="#B8B8D0"/>
            <SolidColorBrush x:Key="DarkThemeSidebar" Color="#151525"/>
            <SolidColorBrush x:Key="DarkThemeAccent" Color="#00C9A7"/>
            <SolidColorBrush x:Key="DarkThemeCard" Color="#252538"/>
            <SolidColorBrush x:Key="DarkThemeBorder" Color="#333350"/>
            <SolidColorBrush x:Key="DarkThemeInput" Color="#2D2D42"/>
            <SolidColorBrush x:Key="DarkThemeInputBorder" Color="#333350"/>
            <SolidColorBrush x:Key="DarkThemeAltRow" Color="#2A2A40"/>
            <SolidColorBrush x:Key="DarkThemeSuccess" Color="#4CAF50"/>
            <SolidColorBrush x:Key="DarkThemeWarning" Color="#FF9800"/>
            <SolidColorBrush x:Key="DarkThemeError" Color="#F44336"/>
            <SolidColorBrush x:Key="DarkThemeHover" Color="#303048"/>
            
            <!-- Dynamic Theme Resources (initially Light) -->
            <SolidColorBrush x:Key="AppBackground" Color="{Binding Source={StaticResource LightThemeBackground}, Path=Color}"/>
            <SolidColorBrush x:Key="AppText" Color="{Binding Source={StaticResource LightThemeText}, Path=Color}"/>
            <SolidColorBrush x:Key="AppTextSecondary" Color="{Binding Source={StaticResource LightThemeTextSecondary}, Path=Color}"/>
            <SolidColorBrush x:Key="AppSidebar" Color="{Binding Source={StaticResource LightThemeSidebar}, Path=Color}"/>
            <SolidColorBrush x:Key="AppAccent" Color="{Binding Source={StaticResource LightThemeAccent}, Path=Color}"/>
            <SolidColorBrush x:Key="AppCard" Color="{Binding Source={StaticResource LightThemeCard}, Path=Color}"/>
            <SolidColorBrush x:Key="AppBorder" Color="{Binding Source={StaticResource LightThemeBorder}, Path=Color}"/>
            <SolidColorBrush x:Key="AppInput" Color="{Binding Source={StaticResource LightThemeInput}, Path=Color}"/>
            <SolidColorBrush x:Key="AppInputBorder" Color="{Binding Source={StaticResource LightThemeInputBorder}, Path=Color}"/>
            <SolidColorBrush x:Key="AppAltRow" Color="{Binding Source={StaticResource LightThemeAltRow}, Path=Color}"/>
            <SolidColorBrush x:Key="AppSuccess" Color="{Binding Source={StaticResource LightThemeSuccess}, Path=Color}"/>
            <SolidColorBrush x:Key="AppWarning" Color="{Binding Source={StaticResource LightThemeWarning}, Path=Color}"/>
            <SolidColorBrush x:Key="AppError" Color="{Binding Source={StaticResource LightThemeError}, Path=Color}"/>
            <SolidColorBrush x:Key="AppHover" Color="{Binding Source={StaticResource LightThemeHover}, Path=Color}"/>
            
            <!-- ============== COMPONENT STYLES ============== -->

            <!-- Enhanced DatePicker Style com suporte adequado para tema escuro -->
            <Style x:Key="ModernDatePickerStyle" TargetType="DatePicker">
                <Setter Property="Background" Value="{DynamicResource AppInput}"/>
                <Setter Property="Foreground" Value="{DynamicResource AppText}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AppInputBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Margin" Value="0,5"/>
                <Setter Property="Padding" Value="10,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DatePicker">
                            <Border x:Name="DatePickerBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6"
                        Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- TextBox para exibir a data -->
                                    <DatePickerTextBox x:Name="PART_TextBox"
                                         Grid.Column="0"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Foreground="{TemplateBinding Foreground}"
                                         FontSize="{TemplateBinding FontSize}"
                                         VerticalContentAlignment="Center"
                                         Focusable="{TemplateBinding Focusable}"
                                         HorizontalContentAlignment="Stretch"
                                         Padding="0"/>

                                    <!-- Botão do calendário -->
                                    <Button x:Name="PART_Button"
                                Grid.Column="1"
                                Background="Transparent"
                                BorderThickness="0"
                                Width="30"
                                Height="30"
                                Margin="2,0,0,0"
                                Focusable="False"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="ButtonBorder"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="4"
                                            Padding="5">
                                                    <!-- Ícone do calendário -->
                                                    <Path Fill="{DynamicResource AppText}"
                                              Stretch="Uniform"
                                              Width="14"
                                              Height="14"
                                              Data="M19,19H5V8H19M16,1V3H8V1H6V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3H18V1M17,12H12V17H17V12Z"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource AppHover}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource AppAccent}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>

                                    <!-- Popup do calendário -->
                                    <Popup x:Name="PART_Popup"
                               StaysOpen="False"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=DatePickerBorder}">
                                        <Border Background="{DynamicResource AppCard}"
                                    BorderBrush="{DynamicResource AppBorder}"
                                    BorderThickness="1"
                                    CornerRadius="8"
                                    Padding="10">
                                            <Border.Effect>
                                                <DropShadowEffect Color="#40000000" BlurRadius="10" ShadowDepth="3" Opacity="0.3"/>
                                            </Border.Effect>
                                            <Calendar x:Name="PART_Calendar"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Foreground="{DynamicResource AppText}"/>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="DatePickerBorder" Property="BorderBrush" Value="{DynamicResource AppAccent}"/>
                                    <Setter TargetName="DatePickerBorder" Property="BorderThickness" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="DatePickerBorder" Property="Opacity" Value="0.7"/>
                                    <Setter Property="Foreground" Value="{DynamicResource AppTextSecondary}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Estilo para o DatePickerTextBox (componente interno) -->
            <Style TargetType="DatePickerTextBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource AppText}"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DatePickerTextBox">
                            <Grid>
                                <TextBox x:Name="PART_TextBox"
                             Background="{TemplateBinding Background}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             Foreground="{TemplateBinding Foreground}"
                             FontSize="{TemplateBinding FontSize}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}"
                             IsReadOnly="True"
                             Cursor="Hand"/>
                                <TextBlock x:Name="PART_Watermark"
                               Text="Selecione uma data"
                               Foreground="{DynamicResource AppTextSecondary}"
                               FontSize="{TemplateBinding FontSize}"
                               VerticalAlignment="Center"
                               Margin="2,0"
                               Visibility="Collapsed"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Text" Value="">
                                    <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Estilo para o Calendar (quando o popup é aberto) -->
            <Style TargetType="Calendar">
                <Setter Property="Background" Value="{DynamicResource AppCard}"/>
                <Setter Property="Foreground" Value="{DynamicResource AppText}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Calendar">
                            <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                                <CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Style="{DynamicResource CalendarItemStyle}"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Estilo para o CalendarItem -->
            <Style x:Key="CalendarItemStyle" TargetType="CalendarItem">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CalendarItem">
                            <Grid x:Name="PART_Root" Background="{TemplateBinding Background}">
                                <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <!-- Header com navegação -->
                                        <Grid Grid.Row="0" Background="{DynamicResource AppCard}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <Button x:Name="PART_PreviousButton"
                                        Grid.Column="0"
                                        Content="◀"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Foreground="{DynamicResource AppText}"
                                        FontSize="14"
                                        Width="30"
                                        Height="30"
                                        Margin="5"/>

                                            <Button x:Name="PART_HeaderButton"
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Foreground="{DynamicResource AppText}"
                                        FontWeight="SemiBold"
                                        FontSize="14"
                                        Height="30"
                                        Margin="5"/>

                                            <Button x:Name="PART_NextButton"
                                        Grid.Column="2"
                                        Content="▶"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Foreground="{DynamicResource AppText}"
                                        FontSize="14"
                                        Width="30"
                                        Height="30"
                                        Margin="5"/>
                                        </Grid>

                                        <!-- Grid com os dias -->
                                        <Grid x:Name="PART_MonthView" Grid.Row="1" Visibility="Visible">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                        </Grid>

                                        <Grid x:Name="PART_YearView" Grid.Row="1" Visibility="Hidden">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <!-- Enhanced Button Style -->
            <Style x:Key="ModernButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource AppAccent}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Padding" Value="15,0"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="ButtonBorder" 
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="6" 
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="0">
                                <Border.Effect>
                                    <DropShadowEffect Color="#20000000" BlurRadius="5" ShadowDepth="1" Opacity="0.3"/>
                                </Border.Effect>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#00B397"/>
                                    <Setter TargetName="ButtonBorder" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect Color="#30000000" BlurRadius="8" ShadowDepth="2" Opacity="0.4"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#009D85"/>
                                    <Setter TargetName="ButtonBorder" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect Color="#20000000" BlurRadius="4" ShadowDepth="1" Opacity="0.2"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#CCCCCC"/>
                                    <Setter Property="Foreground" Value="#888888"/>
                                    <Setter TargetName="ButtonBorder" Property="Effect" Value="{x:Null}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="2"/>
                                    <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#4DFFE6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Enhanced Sidebar Button Style -->
            <Style x:Key="ModernSidebarButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Height" Value="45"/>
                <Setter Property="Margin" Value="10,5"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="ButtonBorder" 
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="8"
                                    Padding="15,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="1"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="#202035"/>
                                    <Setter Property="Opacity" Value="1.0"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="#101020"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1"/>
                                    <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Enhanced Card Style -->
            <Style x:Key="ModernCardStyle" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource AppCard}"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Padding" Value="20"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#20000000" BlurRadius="15" ShadowDepth="1" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Enhanced TextBox Style -->
            <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource AppInput}"/>
                <Setter Property="Foreground" Value="{DynamicResource AppText}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AppInputBorder}"/>
                <Setter Property="Padding" Value="10,8"/>
                <Setter Property="Margin" Value="0,5"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="TextBoxBorder" 
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="6"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{DynamicResource AppAccent}"/>
                                    <Setter TargetName="TextBoxBorder" Property="BorderThickness" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="TextBoxBorder" Property="Opacity" Value="0.7"/>
                                    <Setter Property="Foreground" Value="{DynamicResource AppTextSecondary}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Enhanced DataGrid Style -->
            <Style x:Key="ModernDataGridStyle" TargetType="DataGrid">
                <Setter Property="Background" Value="{DynamicResource AppCard}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AppBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="RowBackground" Value="{DynamicResource AppCard}"/>
                <Setter Property="AlternatingRowBackground" Value="{DynamicResource AppAltRow}"/>
                <Setter Property="GridLinesVisibility" Value="Horizontal"/>
                <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource AppBorder}"/>
                <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource AppBorder}"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="CanUserReorderColumns" Value="True"/>
                <Setter Property="CanUserResizeColumns" Value="True"/>
                <Setter Property="CanUserSortColumns" Value="True"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
                <Setter Property="ColumnHeaderHeight" Value="40"/>
                <Setter Property="FontSize" Value="13"/>
            </Style>
            
            <!-- DataGrid Column Header Style -->
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="{DynamicResource AppCard}"/>
                <Setter Property="Foreground" Value="{DynamicResource AppText}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="10,0"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AppBorder}"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridColumnHeader">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    Height="{TemplateBinding Height}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Path x:Name="SortArrow" Grid.Column="1" Width="8" Height="10" Margin="5,0,5,0" 
                                          Stretch="Fill" Opacity="0.5" Fill="{TemplateBinding Foreground}" 
                                          Visibility="Collapsed" Data="M 0,0 L 8,0 L 4,5 Z"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="SortArrow" Property="Data" Value="M 0,5 L 8,5 L 4,0 Z"/>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AppHover}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- DataGrid Cell Style -->
            <Style TargetType="DataGridCell">
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource AppText}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AppAccent}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- DataGrid Row Style -->
            <Style TargetType="DataGridRow">
                <Setter Property="Height" Value="38"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridRow">
                            <Border x:Name="RowBorder" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1" 
                                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
                                                              Visibility="{TemplateBinding DetailsVisibility}"/>
                                    <DataGridRowHeader Grid.RowSpan="2"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                      Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
                                </SelectiveScrollingGrid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AppHover}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- ============== SPACING RESOURCES ============== -->
            
            <!-- Standard Spacing Values -->
            <Thickness x:Key="SpacingTiny">2</Thickness>
            <Thickness x:Key="SpacingSmall">5</Thickness>
            <Thickness x:Key="SpacingMedium">10</Thickness>
            <Thickness x:Key="SpacingLarge">20</Thickness>
            <Thickness x:Key="SpacingXLarge">40</Thickness>
            
            <!-- Margin Values -->
            <Thickness x:Key="MarginSmall">5</Thickness>
            <Thickness x:Key="MarginStandard">10</Thickness>
            <Thickness x:Key="MarginMedium">15</Thickness>
            <Thickness x:Key="MarginLarge">20</Thickness>
            
            <!-- ============== STATUS INDICATORS ============== -->
            
            <!-- Status Indicator Style -->
            <Style x:Key="StatusIndicatorStyle" TargetType="Border">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="CornerRadius" Value="5"/>
                <Setter Property="Margin" Value="0,0,8,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            
            <!-- Status Text Style -->
            <Style x:Key="StatusTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            
            <!-- Success Status -->
            <Style x:Key="SuccessStatusIndicator" TargetType="Border" BasedOn="{StaticResource StatusIndicatorStyle}">
                <Setter Property="Background" Value="{DynamicResource AppSuccess}"/>
            </Style>
            
            <Style x:Key="SuccessStatusText" TargetType="TextBlock" BasedOn="{StaticResource StatusTextStyle}">
                <Setter Property="Foreground" Value="{DynamicResource AppSuccess}"/>
            </Style>
            
            <!-- Warning Status -->
            <Style x:Key="WarningStatusIndicator" TargetType="Border" BasedOn="{StaticResource StatusIndicatorStyle}">
                <Setter Property="Background" Value="{DynamicResource AppWarning}"/>
            </Style>
            
            <Style x:Key="WarningStatusText" TargetType="TextBlock" BasedOn="{StaticResource StatusTextStyle}">
                <Setter Property="Foreground" Value="{DynamicResource AppWarning}"/>
            </Style>
            
            <!-- Error Status -->
            <Style x:Key="ErrorStatusIndicator" TargetType="Border" BasedOn="{StaticResource StatusIndicatorStyle}">
                <Setter Property="Background" Value="{DynamicResource AppError}"/>
            </Style>
            
            <Style x:Key="ErrorStatusText" TargetType="TextBlock" BasedOn="{StaticResource StatusTextStyle}">
                <Setter Property="Foreground" Value="{DynamicResource AppError}"/>
            </Style>
            
            <!-- Toast Notification Style -->
            <Style x:Key="ToastNotificationStyle" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource AppCard}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AppBorder}"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Padding" Value="15,10"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#40000000" BlurRadius="10" ShadowDepth="3" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
